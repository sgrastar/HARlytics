name: Issue Security Check

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]

jobs:
  check-attachments:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Check for sensitive attachments
        uses: actions/github-script@v7
        with:
          script: |
            const { issue, comment } = context.payload;
            const content = comment ? comment.body : issue.body;
            
            if (!content) return;
            
            // Detect file attachments with potentially sensitive content
            // Pattern matches GitHub attachment URLs for various file types
            const attachmentPattern = /https:\/\/github\.com\/[^)\s]+\.(har|json|txt|log)/gi;
            const attachmentUrls = content.match(attachmentPattern) || [];
            
            if (attachmentUrls.length === 0) return;

            // Check each file for sensitive information
            const { execSync } = require('child_process');
            let foundSensitive = false;
            let detectedPatterns = new Set();
            let checkedFiles = new Set();
            
            for (const url of attachmentUrls) {
              try {
                // Extract filename for logging
                const filename = url.split('/').pop();
                if (checkedFiles.has(filename)) continue;
                checkedFiles.add(filename);
                
                const result = execSync(`python .github/scripts/content_checker.py "${url}"`);
                const checkResult = JSON.parse(result.toString());
                
                if (checkResult.contains_sensitive) {
                  foundSensitive = true;
                  checkResult.detected_patterns.forEach(pattern => detectedPatterns.add(pattern));
                }
              } catch (error) {
                console.error(`Error checking ${url}: ${error}`);
              }
            }

            if (foundSensitive) {
                const warningMessage = `⚠️ Security Warning

                We detected potentially sensitive information in the attached file(s).
                Found sensitive data types: ${Array.from(detectedPatterns).join(', ')}

                Security recommendations:
                - Remove files containing sensitive information
                - Extract and share only the necessary information
                - Remove any cookies, session data, authentication tokens
                - Consider using tools to sanitize logs and request data
                - Double-check the content before re-uploading

                Need help sanitizing the files? Let us know and we'll guide you through the process.

                Files checked: ${Array.from(checkedFiles).join(', ')}`;


              if (comment) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: warningMessage
                });
              } else {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: `${warningMessage}\n\n---\n\n${issue.body}`
                });
              }
            }
